name: Check Component Composition

on:
  pull_request:
    branches: [ main ]
    paths:
      - '**/*.tsx'
      - '**/*.jsx'

jobs:
  check-composition:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: |
            **/*.tsx
            **/*.jsx
          
      - name: Check component composition
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          # Initialize array for tracking issues
          composition_issues=()
          
          # Check each changed component file
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            # Skip test files
            if [[ "$file" == *".test."* || "$file" == *".spec."* ]]; then
              continue
            fi
            
            # Skip files with "no-composition-check" comment
            if grep -q "no-composition-check" "$file"; then
              echo "File has no-composition-check, skipping"
              continue
            fi
            
            # Only process component files
            if grep -q "component\$" "$file"; then
              echo "Checking composition in $file..."
              
              # Extract return statements (single-line and multi-line)
              return_blocks=$(grep -n -A 15 "return (" "$file" || true)
              
              if [ -n "$return_blocks" ]; then
                echo "Found return blocks to analyze..."
                
                # Look for multiple HTML elements in return statements
                if echo "$return_blocks" | grep -E "<div[^>]*>[[:space:]]*<.*>[[:space:]]*<" | grep -v "no-composition-check"; then
                  composition_issues+=("$file:Nested elements - HTML element wrapping another element")
                fi
                
                # Look for divs wrapping Render components
                if echo "$return_blocks" | grep -E "<div[^>]*>[[:space:]]*<Render" | grep -v "no-composition-check"; then
                  composition_issues+=("$file:Nested elements - div wrapping Render")
                fi
                
                # Check for fragment with multiple top-level children
                if echo "$return_blocks" | grep -E "<(>|Fragment)[^>]*>[[:space:]]*<.*>[[:space:]]*<.*>" | grep -v "no-composition-check"; then
                  composition_issues+=("$file:Fragment with multiple children")
                fi
              fi
            fi
          done
          
          # Report composition issues
          if [ ${#composition_issues[@]} -gt 0 ]; then
            echo "::error title=Component Composition Issues::❌ Components should follow 'One Component, One Markup Element' principle"
            echo "::group::Files with composition issues"
            
            for issue in "${composition_issues[@]}"; do
              file_path=$(echo "$issue" | cut -d':' -f1)
              issue_desc=$(echo "$issue" | cut -d':' -f2-)
              line_num=$(echo "$issue" | cut -d':' -f3)
              
              echo "::error file=$file_path::$issue_desc"
            done
            
            echo "::endgroup::"
            
            echo "::group::How to fix composition issues"
            echo "Each component should typically correspond to ONE piece of markup."
            echo ""
            echo "❌ Bad patterns detected:"
            echo '```tsx'
            echo "// Div wrapping Render (found in your code)"
            echo "<div>"
            echo "  <Render fallback=\"span\" {...props}>"
            echo "    <Slot />"
            echo "  </Render>"
            echo "</div>"
            echo ""
            echo "// Should be fixed to:"
            echo "<Render fallback=\"div\" {...props}>"
            echo "  <Slot />"
            echo "</Render>"
            echo '```'
            echo ""
            echo "If you need to exempt a component from this check, add a comment:"
            echo "// no-composition-check"
            echo ""
            echo "See: https://qwik.design/contributing/composition/"
            echo "::endgroup::"
            
            exit 1
          else
            echo "✅ All components follow proper composition patterns."
          fi