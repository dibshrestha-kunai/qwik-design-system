{
  "pagination": [
    {
      "Pagination Ellipsis": {
        "inheritsFrom": "div"
      }
    },
    {
      "Pagination Next": {
        "inheritsFrom": "button"
      }
    },
    {
      "Pagination Page": {
        "types": [
          {
            "PublicAllowedElements": []
          },
          {
            "PublicPaginationPageProps": [
              {
                "comment": "Internal index of the page item",
                "prop": "_index",
                "type": "number"
              },
              {
                "comment": "Whether this page item is disabled",
                "prop": "isDisabled",
                "type": "boolean"
              },
              {
                "comment": "",
                "prop": "as",
                "type": "C"
              }
            ]
          }
        ],
        "dataAttributes": [
          {
            "name": "data-index",
            "type": "string",
            "comment": "Specifies the index of the pagination page"
          },
          {
            "name": "data-current",
            "type": "string",
            "comment": "Indicates if this is the currently selected page"
          }
        ]
      }
    },
    {
      "Pagination Previous": {
        "inheritsFrom": "button"
      }
    },
    {
      "Pagination Root": {
        "types": [
          {
            "PublicPaginationRootProps": [
              {
                "comment": "The total number of pages to display",
                "prop": "totalPages",
                "type": "number"
              },
              {
                "comment": "The initial page number to display when component loads",
                "prop": "currentPage",
                "type": "number"
              },
              {
                "comment": "Reactive value that can be controlled via signal. Sets the current active page number",
                "prop": "\"bind:page\"",
                "type": "Signal<number | 1>"
              },
              {
                "comment": "Event handler for page change events",
                "prop": "onPageChange$",
                "type": "QRL<(page: number) => void>"
              },
              {
                "comment": "Whether the pagination component is disabled",
                "prop": "disabled",
                "type": "boolean"
              },
              {
                "comment": "Array of page numbers to display",
                "prop": "pages",
                "type": "number[]"
              },
              {
                "comment": "Custom element to display for ellipsis",
                "prop": "ellipsis",
                "type": "JSXChildren"
              },
              {
                "comment": "Number of siblings to show on each side of current page",
                "prop": "siblingCount",
                "type": "number"
              }
            ]
          }
        ],
        "inheritsFrom": "div",
        "dataAttributes": [
          {
            "name": "data-disabled",
            "type": "string | undefined",
            "comment": "Indicates whether the pagination component is disabled"
          }
        ]
      }
    }
  ],
  "anatomy": [
    {
      "name": "Pagination.Root",
      "description": "Root pagination container component that provides context and handles page management"
    },
    {
      "name": "Pagination.Page",
      "description": "Individual page number button component"
    },
    {
      "name": "Pagination.Next",
      "description": "Next page navigation button component"
    },
    {
      "name": "Pagination.Previous",
      "description": "Previous page navigation button component"
    },
    {
      "name": "Pagination.Ellipsis",
      "description": "Renders an ellipsis item in the pagination"
    }
  ],
  "keyboardInteractions": [
    {
      "key": "ArrowRight",
      "comment": "When focus is on a page number button, moves focus to the next page number"
    },
    {
      "key": "ArrowLeft",
      "comment": "When focus is on a page number button, moves focus to the previous page number"
    },
    {
      "key": "Home",
      "comment": "When focus is on a page number button, moves focus to the first page number"
    },
    {
      "key": "End",
      "comment": "When focus is on a page number button, moves focus to the last page number"
    },
    {
      "key": "Enter",
      "comment": "When focus is on a page number button, selects that page number"
    },
    {
      "key": "Space",
      "comment": "When focus is on the previous or next button, navigates to the previous or next page respectively"
    }
  ],
  "features": [
    "Page number selection with keyboard navigation (arrows, home, end)",
    "Dynamic pagination with customizable sibling count",
    "First/Last page quick navigation",
    "Ellipsis support for large page sets",
    "WAI-ARIA compliant pagination controls",
    "Controlled and uncontrolled page selection modes",
    "Customizable ellipsis element",
    "Disabled state handling",
    "Page change event handlers",
    "Automatic page range calculation",
    "Focus management between page numbers",
    "Boundary page number validation"
  ]
}
